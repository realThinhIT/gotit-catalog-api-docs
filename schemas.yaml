# AUTHENTICATION
LoginUserReq:
  type: object
  required:
    - username
    - password
  properties:
    username:
      type: string
      example: thinhnd
    password:
      type: string
      example: "12345678"

RegisterUserReq:
  type: object
  required:
    - username
    - password
    - email
    - name
  properties:
    username:
      type: string
      example: thinhnd
    password:
      type: string
      example: "12345678"
    email:
      type: string
      example: thinhnd.ict@gmail.com
    name:
      type: string
      example: Thinh Nguyen

RegisterUserRes:
  type: object
  properties:
    id:
      type: integer
      example: 1
    username:
      type: string
      example: thinhnd
    email:
      type: string
      example: thinhnd.ict@gmail.com
    name:
      type: string
      example: Thinh Nguyen

JWTResponse:
  type: object
  properties:
    access_token:
      type: string
      example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwiaWRlbnRpdHkiOjEsImlhdCI6MTUxNjIzOTAyMn0.5vrxKsP1JKpiLS6LjP_-4KB_70qCjZXy1wPt-4QDgdc

JWTErrorResponse:
  type: object
  properties:
    description:
      type: string
      example: Invalid credentials
    error:
      type: string
      example: Bad Request
    status_code:
      type: integer
      example: 401




# CATEGORIES
Category:
  type: object
  required:
    - name
  properties:
    name:
      type: string
      example: Example Category
    description:
      type: string
      example: This is an example category for the catalog app

CategoryReq:
  type: object
  properties:
    name:
      type: string
      example: Example Category
    description:
      type: string
      example: This is an example category for the catalog app


# ITEMS
Item:
  type: object
  required:
    - name
  properties:
    name:
      type: string
      example: Example Category
    description:
      type: string
      example: This is an example category for the catalog app
    is_owner:
      type: boolean
      description: If authenticated, this field will help user to know if the resource is owned by them
      example: false

ItemReq:
  type: object
  properties:
    name:
      type: string
      example: Example Category
    description:
      type: string
      example: This is an example category for the catalog app


# BASE RESPONSES
BaseId:
  type: object
  properties:
    id:
      type: integer
      example: 1
    created:
      type: string
      example: 2019-06-17T06:57:34+00:00
      default: 2019-06-17T06:57:34+00:00
    updated:
      type: string
      example: 2019-06-17T06:57:34+00:00
      default: 2019-06-17T06:57:34+00:00

ApiResponse:
  type: object
  properties: 
    success:
      type: integer
      enum: [0, 1]
      default: 1
    message:
      type: string
      default: Action performed successfully!
    data:
      schema:
        type:
          oneOf:
            - object
            - array
    additional_data:
      type: object
      
ApiErrorResponse:
  type: object
  properties:
    error_code:
      type: integer
      default: 40000
    message:
      type: string
      default: The server encountered some issues while processing your request.
    errors:
      type: object

ApiNotFoundResponse:
  type: object
  allOf:
    - $ref: './schemas.yaml#/ApiErrorResponse'
    - properties:
        error_code:
          example: 40400
        message:
          example: The resource requested doesn't exist.

ApiBadRequestValidationResponse:
  type: object
  allOf:
    - $ref: './schemas.yaml#/ApiErrorResponse'
    - properties:
        error_code:
          enum: [
            40000,
            40001,
            40002
          ]
        message:
          enum: [
            'Bad request, please try again.',
            'Some inputs are invalid, please correct and try again.',
            'The resource you trying to modify already exists.'
          ]

ApiUnauthorizedResponse:
  type: object
  allOf:
    - $ref: './schemas.yaml#/ApiErrorResponse'
    - properties:
        error_code:
          example: 40100
        message:
          example: Please authenticate first before performing this action.

ApiResponsePagination:
  type: object
  properties:
    total:
      type: integer
      description: Amount of items in the collection.
      example: 1
    total_pages:
      type: integer
      description: Amount of pages in the collection.
      example: 1
    has_next:
      type: boolean
      description: Is next page is available?
      example: false
    per_page:
      type: integer
      description: Amount of items in a page
      example: 50